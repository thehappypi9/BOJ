// 백준 1436번 문제 (브루트 포스 - 5 : 영화감독 숌)

// 문제:
// 666은 종말을 나타내는 숫자라고 한다. 따라서, 많은 블록버스터 영화에서는 666이 들어간 제목을 많이 사용한다.
// 영화감독 숌은 세상의 종말 이라는 시리즈 영화의 감독이다.
// 조지 루카스는 스타워즈를 만들 때, 스타워즈 1, 스타워즈 2, 스타워즈 3, 스타워즈 4, 스타워즈 5, 스타워즈 6과 같이 이름을 지었고,
// 피터 잭슨은 반지의 제왕을 만들 때, 반지의 제왕 1, 반지의 제왕 2, 반지의 제왕 3과 같이 영화 제목을 지었다.
// 하지만 숌은 자신이 조지 루카스와 피터 잭슨을 뛰어넘는다는 것을 보여주기 위해서 영화 제목을 좀 다르게 만들기로 했다.
// 종말의 숫자란 어떤 수에 6이 적어도 3개이상 연속으로 들어가는 수를 말한다.
// 제일 작은 종말의 숫자는 666이고, 그 다음으로 큰 수는 1666, 2666, 3666, .... 과 같다.
// 따라서, 숌은 첫 번째 영화의 제목은 세상의 종말 666, 두 번째 영화의 제목은 세상의 종말 1666 이렇게 이름을 지을 것이다.
// 일반화해서 생각하면, N번째 영화의 제목은 세상의 종말 (N번째로 작은 종말의 숫자) 와 같다.
// 숌이 만든 N번째 영화의 제목에 들어간 숫자를 출력하는 프로그램을 작성하시오. 숌은 이 시리즈를 항상 차례대로 만들고, 다른 영화는 만들지 않는다.

// 입력:
// 첫째 줄에 숫자 N이 주어진다. N은 10,000보다 작거나 같은 자연수이다.

// 출력:
// 첫째 줄에 N번째 영화의 제목에 들어간 수를 출력한다.


#include <iostream>
#include <vector>
using namespace std;

bool IsThatNum (int n) {  // n이 종말의 숫자라면 true 반환, 종말의 숫자가 아니라면 false 반환하는 함수
    vector<int> ciphers;    // n의 각 자릿수를 담을 벡터
    int divider = 1;
    for (int i = 0; i < 6; i++) {  // n의 각 자릿수를 ciphers 안에 하나씩 담는다. i < 6 이므로 확인할 수 있는 최대 자릿수 값이 정해져있다.
        ciphers.push_back(n/divider%10);
        divider *= 10;
    }

    int six = 0;
    for (int i = 0; i < int(ciphers.size()); i++) {   // 연속된 3개의 6이 있다면 true를 반환한다.
        if (ciphers[i] == 6) {
            six++;
            if (six >= 3) {
                return true;
            }
        }
        else {
            six = 0;
        }
    }

    return false;   // true가 반환되지 못하면 false를 반환한다.
}

int main() {

    int N;
    cin >> N;
    int thatnum;

    int check = 1;
    while(N) {
        if (IsThatNum(check)) {
            thatnum = check++;
            N--;
        }
        else {
            check++;
        }
    }

    cout << thatnum;


    return 0;
}