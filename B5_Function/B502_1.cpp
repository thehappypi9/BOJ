// 백준 4673번 문제 (함수 - 2: 셀프 넘버)
// 함수를 사용하지 않고 풂.

// 알고리즘:
// 10000개의 원소가 들어갈 수 있는 배열 a[10000]을 만들고 모두 0으로 채워넣는다.
// 각 a[i]는 i+1을 위한 자리다.
// i = 0부터 시작해서, i = 9999까지, a[i]가 0인지 검사한다. 
// 0이면 -> self number -> i+1로부터 주어진 연산을 통해 나올 수 있는 10000 이하의 수들을 배열에 넣는다. 동시에 i+1을 출력한다.
// 0이 아니면 -> 이미 다른 연산자로부터 연산되어 채워진 것이므로 self number가 아니기에 넘어간다.
// (이 수로부터 주어진 연산을 통해 나오는 수들은 이미 들어있다.)


#include <iostream>

int main() {

    using namespace std;

    int a[10000] = {0};

    for (int i = 0; i < 10000; i++)
    {
        if(a[i] == 0) {                         // i + 1은 self number
            for (int j = i+1; j <= 10000; j = j + j/10000 + (j/1000)%10 + (j/100)%10 + (j/10)%10 + j%10) {    // j = i + 1 = 1로 시작, j가 10000이 될때까지
                a[j-1] = j;                     // 배열에 j로부터 시작하는 숫자들 다 집어넣기
            }
            cout << i + 1 << endl;
        }
        else {}
    }




    return 0;
}