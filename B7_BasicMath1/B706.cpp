// 백준 2775번 문제 (기본수학1 - 6 : 부녀회장이 될테야)

// 문제:
// 평소 반상회에 참석하는 것을 좋아하는 주희는 이번 기회에 부녀회장이 되고 싶어 각 층의 사람들을 불러 모아 반상회를 주최하려고 한다.
// 이 아파트에 거주를 하려면 조건이 있는데, 
// “a층의 b호에 살려면 자신의 아래(a-1)층의 1호부터 b호까지 사람들의 수의 합만큼 사람들을 데려와 살아야 한다” 는 계약 조항을 꼭 지키고 들어와야 한다.
// 아파트에 비어있는 집은 없고 모든 거주민들이 이 계약 조건을 지키고 왔다고 가정했을 때,
// 주어지는 양의 정수 k와 n에 대해 k층에 n호에는 몇 명이 살고 있는지 출력하라.
// 단, 아파트에는 0층부터 있고 각층에는 1호부터 있으며, 0층의 i호에는 i명이 산다.

// 입력:
// 첫 번째 줄에 Test case의 수 T가 주어진다. 그리고 각각의 케이스마다 입력으로 첫 번째 줄에 정수 k, 두 번째 줄에 정수 n이 주어진다.

// 출력:
// 각각의 Test case에 대해서 해당 집에 거주민 수를 출력하라.

#include <iostream>
#include <vector>

int main() {

    using namespace std;

    vector<vector<int>> ppl(15, vector<int> (14));  // ppl[층][호수-1]
    for (int i = 0; i < 14; i++) {   // 0층에 사람 넣기
        ppl[0][i] = i+1;
    }

    int sum = 0;
    for (int i = 1; i <= 14; i++) {  // 1층부터 14층까지 사람 넣기
        for (int j = 0; j <= 13; j++) {  // 각 호수별로. j = 0 일때, 1호. j = 13 일때, 14호.
            sum = 0;
            for (int a = 0; a <= j; a++) { // 전 층 1호부터 j+1호까지.
                sum = sum + ppl[i-1][a];
            }
            ppl[i][j] = sum;
        }
    }

    int T = 0;
    cin >> T;           // 테스트케이스
    
    vector<int> k(T);   // 층
    vector<int> n(T);   // 호수

    for (int i = 0; i < T; i++) {
        cin >> k[i];
        cin >> n[i];
    }



    for (int i = 0; i < T; i++) {
        cout << ppl[k[i]][n[i]-1] << endl;
    }

    return 0;
}